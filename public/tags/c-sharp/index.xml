<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C Sharp on Smylingsas.net</title>
    <link>https://smylingsas.net/tags/c-sharp/</link>
    <description>Recent content in C Sharp on Smylingsas.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Dec 2019 17:26:23 +0100</lastBuildDate>
    
	<atom:link href="https://smylingsas.net/tags/c-sharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C# Params</title>
      <link>https://smylingsas.net/til/c#-params/</link>
      <pubDate>Sat, 21 Dec 2019 17:26:23 +0100</pubDate>
      
      <guid>https://smylingsas.net/til/c#-params/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DataTestMethod</title>
      <link>https://smylingsas.net/til/datatestmethod/</link>
      <pubDate>Sat, 21 Dec 2019 17:22:02 +0100</pubDate>
      
      <guid>https://smylingsas.net/til/datatestmethod/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The C# Extension Method</title>
      <link>https://smylingsas.net/til/the-c#-extension-method/</link>
      <pubDate>Sat, 21 Dec 2019 17:19:26 +0100</pubDate>
      
      <guid>https://smylingsas.net/til/the-c#-extension-method/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Using HashSet to Handle Data Sets in C#</title>
      <link>https://smylingsas.net/til/using-hashset-to-handle-data-sets-in-c/</link>
      <pubDate>Wed, 20 Nov 2019 21:52:48 +0100</pubDate>
      
      <guid>https://smylingsas.net/til/using-hashset-to-handle-data-sets-in-c/</guid>
      <description>HashSet&amp;lt;int&amp;gt; lowNumbers = new HashSet&amp;lt;int&amp;gt;();HashSet&amp;lt;int&amp;gt; highNumbers = new HashSet&amp;lt;int&amp;gt;();for (int i = 0; i &amp;lt; 6; i++){lowNumbers.Add(i);}for (int i = 3; i &amp;lt; 10; i++){highNumbers.Add(i);}Console.Write(&amp;#34;lowNumbers contains {0} elements: &amp;#34;, lowNumbers.Count);DisplaySet(lowNumbers);Console.Write(&amp;#34;highNumbers contains {0} elements: &amp;#34;, highNumbers.Count);DisplaySet(highNumbers);Console.WriteLine(&amp;#34;highNumbers ExceptWith lowNumbers...&amp;#34;);highNumbers.ExceptWith(lowNumbers);Console.Write(&amp;#34;highNumbers contains {0} elements: &amp;#34;, highNumbers.Count);DisplaySet(highNumbers);void DisplaySet(HashSet&amp;lt;int&amp;gt; set){Console.Write(&amp;#34;{&amp;#34;);foreach (int i in set){Console.</description>
    </item>
    
    <item>
      <title>SelectMany</title>
      <link>https://smylingsas.net/til/selectmany/</link>
      <pubDate>Mon, 09 Sep 2019 16:58:09 +0200</pubDate>
      
      <guid>https://smylingsas.net/til/selectmany/</guid>
      <description>var matchList = allTeams.SelectMany(team =&amp;gt; team.Players.Select(player =&amp;gt; new Match {Hometeam = team.Name,Awayteam = team.Name,,Goalscorer = player.LastName,})).ToList(); Flatten a C# multi dimensional array using SelectMany and Select</description>
    </item>
    
  </channel>
</rss>